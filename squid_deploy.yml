---
- hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Download and add webmin GPG key
      apt_key:
          url: https://download.webmin.com/jcameron-key.asc
          state: present
          validate_certs: yes
    - name: Add webmin repository
      apt_repository:
          repo: deb https://download.webmin.com/download/repository sarge contrib  
          state: present 
          update_cache: yes
          mode: 0644 
          validate_certs: yes 
          filename: 'webmin' 
    
    - name: install squid and dependencies packages
      apt:
          update_cache: yes
          name: ['squid','ucarp','drbd-utils','apt-transport-https','webmin','vim','micro-httpd','parted',haproxy,unison]
          state: latest

    - name: update webmin config for squid module
      lineinfile:
          dest: /etc/webmin/squid/config
          state: present
          regexp: '{{ item.From }}'
          line: '{{ item.To }}'          
      with_items:
        - {From: "^squid_conf", To: "squid_conf=/etc/squid/squid.conf" }
        - {From: "^log_dir", To: "log_dir=/var/log/squid" }
        - {From: "^cache_dir", To: "cache_dir=/var/spool/squid" }
        - {From: "^pid_file", To: "pid_file=/var/run/squid.pid" }
        - {From: "^squid_path", To: "squid_path=squid" }

    - name: drbdadm down in remote shell
      shell: drbdadm down drbd0 >> /root/linbit-ans-drbd.log
   
    - name: Read device information (always use unit when probing)
      parted: device=/dev/sdb unit=MiB
      register: sdb_info
    
    - name: Remove all partitions from disk
      parted:
        device: /dev/sdb
        number: '{{ item.num }}'
        state: absent
      loop: '{{ sdb_info.partitions }}'
      
    - name: Create partition for vg1
      parted:
        device: /dev/sdb
        number: 1
        flags: [ lvm ]
        state: present

    - name: Create volume group
      lvg:
          vg: debian-vg1
          pvs: /dev/sdb1
          state: present 
    
    - name: Delete LV for DRBD
      lvol:
          vg: debian-vg1
          lv: drbdvol
          state: absent
          force: yes
      
    - name: create  LV for DRBD
      lvol:
          vg: debian-vg1
          lv: drbdvol
          state: present
          size: 100%FREE
          active: yes

    - name: check if drbd0 already present
      command: bash -c "drbdadm sh-dev all | grep -q drbd0; echo $?"
      register: drbd0_exists

    - name: configure DRBD device
      template: src=drbd.j2 dest=/etc/drbd.d/drbd0.res
      register: drbd0_config

    - name: drbdadm create-md in remote shell
      shell: drbdadm create-md drbd0 --force >> /root/linbit-ans-drbd.log
      when: drbd0_exists.stdout == "1"

    - name: drbdadm up in remote shell
      shell: drbdadm up drbd0 >> /root/linbit-ans-drbd.log
      when: drbd0_exists.stdout == "1"

    - name: skip DRBD initial sync
      run_once: true
      shell: bash -c 'while [ $(drbdadm cstate drbd0) != "Connected" ]; do sleep 1s; done; drbdadm new-current-uuid drbd0 --clear-bitmap' >> /root/linbit-ans-drbd.log
      when: drbd0_exists.stdout == "1"
 
  # Adjust if configuration changed as catch all
    - name: drbdadm adjust in remote shell
      shell: drbdadm adjust drbd0 >> /root/linbit-ans-drbd.log
      when: drbd0_config.changed

    - name: drbdadm primary in remote shell
      delegate_to: "squid1"
      shell: drbdadm primary drbd0 >> /root/linbit-ans-drbd.log      

    - name: Start DRBD service
      systemd:
          name: drbd
          enabled: yes 
          state: restarted 

    - name: format to ext4
      filesystem:
          dev: /dev/drbd0
          fstype: ext4
          force: no 
          
    - name: write Squid cache  to fstab
      mount:
          state: present
          path: /var/spool/squid
          src: /dev/drbd0
          fstype: ext4
          opts: defaults 